name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  backend_tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: server/package-lock.json
      - name: Setup, Run Tests
        working-directory: ./server
        run: |
          npm ci
          npm run test

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017

  frontend_component_tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Setup, Build and Run Unit Tests
        working-directory: ./frontend
        run: |
          npm ci
          npm run build --if-present
          npm run test:unit

  frontend_build_and_tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: |
            server/package-lock.json
            frontend/package-lock.json
      - name: Setup, and Run Server
        working-directory: ./server
        run: |
          npm ci
          npm run dev &
      - name: Server Diagonostics
        if: always()
        working-directory: ./frontend
        run: npm run test:server
      - name: Setup, and Run e2e Tests
        working-directory: ./frontend
        run: |
          npm ci
          npm run dev &
          lsof -i -P -n | grep LISTEN
          npm run test:feature
      - name: Server Diagonostics
        if: always()
        working-directory: ./frontend
        run: npm run test:server

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
